{"version":3,"sources":["components/Entry.js","components/Table.js","components/Filter.js","components/Add.js","components/Buttons.js","services/phoneServe.js","components/Notification.js","App.js","Helper.js","index.js"],"names":["Entry","name","phone","id","handleDelete","value","onClick","className","Table","persons","console","log","map","x","number","Filter","handleFilter","filterQuery","onChange","Add","handleAddPerson","handleNameInput","handlePhoneInput","newNumber","newName","onSubmit","type","Buttons","clearInput","clearActive","disabled","baseURL","axios","get","then","response","data","newObject","post","delete","edittedEntry","put","Notification","notice","style","backgroundColor","border","width","boxShadow","margin","textIndent","App","useState","setPersons","setNewName","setNewNumber","setFilterQuery","notification","setNotification","useEffect","phoneServe","returnedData","displayedEntries","filter","query","sanitizedInput","replace","RegExp","test","e","target","preventDefault","newEntry","some","y","Object","values","includes","window","confirm","person","find","p","changedEntry","returnedEntry","setTimeout","catch","error","updateNumber","personObj","concat","addPerson","targetID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66781d20.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Entry = ({ name, phone, id, handleDelete }) => {\r\n    //const buttonLabel = confirmDelete ? \"Confirm Delete?\" : \"Delete\"\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{name}</td>\r\n                <td>{phone}</td>\r\n                <td>\r\n                    <button\r\n                        id={id}\r\n                        value={name}\r\n                        onClick={handleDelete}\r\n                        className=\"deleteButton\"\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Entry\r\n","import React from \"react\"\r\nimport Entry from \"./Entry\"\r\n\r\nconst Table = ({ persons, handleDelete }) => {\r\n    console.log(\"Table Props: \", persons)\r\n    return (\r\n        <div>\r\n            <table id=\"entries\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Phone Number</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {persons.map((x) => (\r\n                        <Entry\r\n                            key={x.name}\r\n                            name={x.name}\r\n                            phone={x.number}\r\n                            id={x.id}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from \"react\"\r\n\r\nconst Filter = ({ handleFilter, filterQuery }) => {\r\n    return (\r\n        <div>\r\n            <label id=\"filterLabel\">Filter by Name: </label>\r\n            <input\r\n                id=\"filterInput\"\r\n                onChange={handleFilter}\r\n                value={filterQuery}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from \"react\"\r\n\r\nconst Add = ({\r\n    handleAddPerson,\r\n    handleNameInput,\r\n    handlePhoneInput,\r\n    newNumber,\r\n    newName,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleAddPerson}>\r\n                <div>\r\n                    <label id=\"namelabel\">Name: </label>\r\n                    <input\r\n                        id=\"name\"\r\n                        onChange={handleNameInput}\r\n                        value={newName}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label id=\"phonelabel\">Phone: </label>\r\n                    <input\r\n                        id=\"phoneInput\"\r\n                        onChange={handlePhoneInput}\r\n                        value={newNumber}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button className=\"buttonBar\" type=\"submit\">\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Add\r\n","import React from \"react\"\r\nimport Add from \"./Add\"\r\n\r\nconst Buttons = ({\r\n    handleAddPerson,\r\n    handleNameInput,\r\n    handlePhoneInput,\r\n    newNumber,\r\n    newName,\r\n    clearInput,\r\n}) => {\r\n    const clearActive = newName === \"\" && newNumber === \"\"\r\n    return (\r\n        <div>\r\n            <Add\r\n                handleNameInput={handleNameInput}\r\n                handlePhoneInput={handlePhoneInput}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                handleAddPerson={handleAddPerson}\r\n            />\r\n            {clearActive ? (\r\n                \"\"\r\n            ) : (\r\n                <button\r\n                    onClick={clearInput}\r\n                    disabled={clearActive}\r\n                    className=\"buttonBar\"\r\n                >\r\n                    Clear\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default Buttons\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\"\r\nconst baseURL = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then((response) => response.data)\r\n}\r\nconst deleteEntry = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then((response) => response.data)\r\n}\r\nconst updateEntry = (id, edittedEntry) => {\r\n    const request = axios.put(`${baseURL}/${id}`, edittedEntry)\r\n    return request.then((response) => response.data)\r\n}\r\nexport default { getAll, create, deleteEntry, updateEntry }\r\n","import React from \"react\"\r\n\r\nconst Notification = ({ notice }) => {\r\n    const noticeStyle = {\r\n        backgroundColor: \"#D0F5FB\",\r\n        border: \"1px solid black\",\r\n        width: \"75vw\",\r\n        boxShadow: \"0px 0px 16px 4px #E5E5E5\",\r\n        margin: \"10px\",\r\n        textIndent: \"2rem\",\r\n    }\r\n\r\n    if (notice === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div style={noticeStyle}>\r\n            <h4>{notice}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Table from \"./components/Table\"\r\nimport { checkDupes } from \"./Helper\"\r\nimport Filter from \"./components/Filter\"\r\nimport Buttons from \"./components/Buttons\"\r\nimport phoneServe from \"./services/phoneServe\"\r\nimport Notification from \"./components/Notification\"\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState(\"\")\r\n    const [newNumber, setNewNumber] = useState(\"\")\r\n    const [filterQuery, setFilterQuery] = useState(\"\")\r\n    const [notification, setNotification] = useState(null)\r\n\r\n    useEffect(() => {\r\n        phoneServe.getAll().then((returnedData) => {\r\n            setPersons(returnedData)\r\n            console.log(\"Response successful\")\r\n        })\r\n    }, [])\r\n\r\n    const handleAddPerson = (e) => {\r\n        e.preventDefault()\r\n        const addPerson = () => {\r\n            const personObj = {\r\n                name: newName,\r\n                number: newNumber,\r\n            }\r\n            console.log(\"PersonObj: \", personObj)\r\n            phoneServe\r\n                .create(personObj)\r\n                .then((returnedData) => {\r\n                    setPersons(persons.concat(returnedData))\r\n                    setNotification(`Added ${newName}`)\r\n                    setTimeout(() => {\r\n                        setNotification(null)\r\n                    }, 5000)\r\n                    phoneServe.getAll().then((returnedData) => {\r\n                        setPersons(returnedData)\r\n                        console.log(\"GET complete\")\r\n                    })\r\n\r\n                    setNewName(\"\")\r\n                    setNewNumber(\"\")\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(\"error object\", error.response.data.error);\r\n                    setNotification((error.response.data.error))\r\n                    setTimeout(() => {\r\n                        setNotification(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n        const updateNumber = (name) => {\r\n            const person = persons.find((p) => p.name === name)\r\n            const id = person.id\r\n            console.log(\"name: \", name, \"Person: \", person)\r\n            const changedEntry = { ...person, number: newNumber }\r\n            phoneServe\r\n                .updateEntry(id, changedEntry)\r\n                .then((returnedEntry) => {\r\n                    setNotification(`Updated ${name}'s phone number`)\r\n                    setTimeout(() => {\r\n                        setNotification(null)\r\n                    }, 5000)\r\n                    setPersons(\r\n                        persons.map((x) =>\r\n                            x.name !== name ? x : returnedEntry\r\n                        )\r\n                    )\r\n                })\r\n                .catch((error) => {\r\n                    setNotification(`Error updating entry for ${name}. ${error.response.data.error}`)\r\n                    setTimeout(() => {\r\n                        setNotification(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n        !checkDupes(newName, persons)\r\n            ? addPerson()\r\n            : window.confirm(\r\n                  `${newName} is already added to phonebook, replace old number with new one?`\r\n              )\r\n            ? updateNumber(newName)\r\n            : console.log(\"Update Cancelled\")\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        const targetID = e.target.id\r\n        window.confirm(`Confirm delete ${e.target.value} ? `)\r\n            ? phoneServe\r\n                  .deleteEntry(targetID)\r\n                  .then((returnedData) => {\r\n                      setNotification(`Entry for ${e.target.value} deleted`)\r\n                      setTimeout(() => {\r\n                          setNotification(null)\r\n                      }, 5000)\r\n                      //setPersons(persons.filter((person) => person.id !== targetID))\r\n                      phoneServe.getAll().then((returnedData) => {\r\n                          setPersons(returnedData)\r\n                      })\r\n                  })\r\n                  .catch((error) => {\r\n                      setNotification(\r\n                          `Error: Entry for ${e.target.value} has already been deleted`\r\n                      )\r\n                      setTimeout(() => {\r\n                          setNotification(null)\r\n                      }, 5000)\r\n                      setPersons(\r\n                          persons.filter(\r\n                              (person) => person.name !== e.target.value\r\n                          )\r\n                      )\r\n                  })\r\n            : console.log(\"delete cancelled\")\r\n    }\r\n\r\n    const displayedEntries = persons.filter((query) => {\r\n        let sanitizedInput = filterQuery.replace(/[#-.]|[[-^]|[?|{}]/g, \"\\\\$&\")\r\n        let searchRegExp = new RegExp(sanitizedInput, \"i\")\r\n        return searchRegExp.test(query.name)\r\n    })\r\n\r\n    const clearInput = () => {\r\n        setNewName(\"\")\r\n        setNewNumber(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification notice={notification} />\r\n            <Buttons\r\n                handleNameInput={(e) => setNewName(e.target.value)}\r\n                handlePhoneInput={(e) => setNewNumber(e.target.value)}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                handleAddPerson={handleAddPerson}\r\n                clearInput={clearInput}\r\n            />\r\n            <br />\r\n            <Filter\r\n                handleFilter={(e) => setFilterQuery(e.target.value)}\r\n                value={filterQuery}\r\n            />\r\n            <h1>Numbers</h1>\r\n            <Table persons={displayedEntries} handleDelete={handleDelete} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","export const checkDupes = (newEntry, currentEntries) => {\r\n    return currentEntries.some((y) => Object.values(y).includes(newEntry))\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}